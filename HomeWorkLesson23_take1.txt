Статическая память выделяется во время компиляции и 
остается постоянной на протяжении всего выполнения программы. 
Выделенные переменные доступны из любого места программы.
Данные сохраняются на протяжении всего времени выполнения программы.

Динамическая память выделяется во время выполнения программы с помощью 
оператора new или подобных функций.Переменные и обьекты имеют локальную
оласть видимости и доступны в пределах блока кода или функции.
Данные существуют пока не будет явно освобождена память с помощью
операторов delete или подобных функций.

Доступ к данным в стеке происходит очень быстро,
так как стек обычно представляет собой небольшую область памяти,
и доступ к элементам выполняется с помощью указателя стека.
Примитивные типы данных, такие как int, double, bool,
хранятся в стеке.
обьявляя переменную с типом int выделяется память в стеке 
16 байт для хранения знаения. 

Принцип работы стека (LIFO) основан на том, что элементы добавляются и 
удаляются только с одного конца структуры данных. 
Это означает, что последний добавленный элемент всегда является первым, 
который будет извлечен из стека. Отсюда и название LIFO (Last In First Out).

Практическое применение стека можно найти во многих областях информатики 
и программирования. Вот несколько примеров его использования:

Вызов функций: Программы используют стек для отслеживания 
вызовов функций. Каждый раз, когда функция вызывается, информация о 
состоянии этой функции добавляется в стек. После завершения функции, 
она удаляется из стека, и управление передается обратно вызывающей функции.
Обработка арифметических выражений.

Это лишь некоторые примеры практического применения стека. На самом деле, стеки широко используются в программировании и имеют множество применений в различных областях.